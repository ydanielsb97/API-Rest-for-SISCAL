INSTRUCCIONES PARA CREAR EL BACKEND DESDE CERO

1. CREAR UN PROYECTO NUEVO DE NODE.JS USANDO npm init
2. Instalar dependencias que utilizarémos:
	-express (npm install --save express) Para manejar el protocolo http
	-connect-multiparty  (npm install --save connect-multiparty) Para gestionar archivos en las peticiones.
	-body-parser (npm install --save body-parser) Para convertir las request a formato JSON
	-mongoose (npm install --save mongoose) es un orm para trabajar con mongoDb, permite crear modelos, entidades y tiene metodos ya hechos
	-nodemon (npm install --save-dev nodemon) Cuando se ejecute cualquier cambio reiniciará automáticamente el servidor.
3. Crear script start con nodemon index.js.
4. Hacer la conexión a la base de datos con mongoose en el index.js:
	-importar mongoose en una variable (var mongoose = require('mongoose'))
	-guardar en otra variable el objeto mongoosePromise (var mongoosePromise = mongoosePromise;
	-utilizar el metodo connect de mongoose de la siguiente forma (mongoose.connect('mongodb://localhost:27017/siscal')) EXPLICACIÓN:
		'mongodb://IPDELSERVIDOR:puertoOficialEs27017/nombreDeBaseDeDatos'
5. Crear servidor con Nodejs y express:
	-Configurar express:
		-creamos un archivo app.js en la raíz del backend
		-usando 'use strict' importamos express (var express = require('express');)
		-importamos bodyParser (var bodyParser = require('body-parser');)
		-cargamos el método express en una variable ( var app = express();)
		-con el metodo use de express creamos un middleware con el bodyparser configurandolo de la siguiente forma:
			-app.use(bodyParser.urlencoded({extended:false})); // Configuración necesaria para que bodyparser funcione
			-app.use(bodyParser.json()); // definimos el middleware llamando al metodo json de bodyparser.
		-exportamos express:
			-module.exports = app;
	
